name: Deploy
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    environment: production
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Check tests
        run: yarn test:ci

      - name: Coveralls
        uses: coverallsapp@github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check linting
        run: yarn lint

      - name: Check commit message
        uses: wagoid/commitlint-github-action@v4

      - name: Create .env
        run: |
          touch .env
          echo NODE_ENV=production >> .env
          echo PORT=4000 >> .env
          echo API_URL=http://localhost: >> .env
          echo GRAPHQL_ENDPOINT=/graphql >> .env
          echo SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }} >> .env
          echo COOKIE_EXPIRES=30 >> .env
          echo COOKIE_SECRET=${{ secrets.COOKIE_SECRET }} >> .env
          echo MONGO_URL=${{ secrets.MONGO_URL }} >> .env
          echo JWT_EXPIRES=600s >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo JWT_REFRESH_EXPIRES=30d >> .env
          echo JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} >> .env
          echo TEST_SEND_EMAIL=false >> .env
          cat .env

      - name: Deploy to heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'aicrag-v2-backend'
          heroku_email: 'christiangama.dev@gmail.com'
          usedocker: true
        env:
          PORT: 4000
